#ifndef PROJECT_CONFIG_HPP // Begin PROJECT_CONFIG_HPP
#define PROJECT_CONFIG_HPP
// ---------------------------------------------------------------------------
//
// Чтобы обновить данные параметры необходимо полностью удалить кеш cmake
//
#cmakedefine LINUX
#cmakedefine WINDOWS

#cmakedefine PROJECT_IMAGE_X64
#cmakedefine PROJECT_IMAGE_X86

#cmakedefine PROJECT_BUILD_TYPE_DEBUG
#cmakedefine PROJECT_BUILD_TYPE_RELEASE

#cmakedefine EXPERIMENTAL_FILESYSTEM
// ---------------------------------------------------------------------------
#define VERSION_MAJOR @CALC++_VERSION_MAJOR@
#define VERSION_MINOR @CALC++_VERSION_MINOR@
#define VERSION_PATCH @CALC++_VERSION_PATCH@
#define VERSION_TWEAK @CALC++_VERSION_TWEAK@
// ---------------------------------------------------------------------------
#if defined(WIN32) || defined(WINDOWS)
    #ifndef WINDOWS
        #define WINDOWS
    #endif
#else
    #ifndef LINUX
        #define LINUX
    #endif
#endif
// ---------------------------------------------------------------------------
//
// Includes
//
#include <string>

#if defined(EXPERIMENTAL_FILESYSTEM)
    #include <experimental/filesystem>
#else
    #include <filesystem>
#endif
// ---------------------------------------------------------------------------
//
// Namespaces
//
#if defined(EXPERIMENTAL_FILESYSTEM)
    namespace stdfs = std::experimental::filesystem;
#else
    namespace stdfs = std::filesystem;
#endif
// ---------------------------------------------------------------------------
// Consts
//
// Тип операционной системы
//
#if defined(WINDOWS)
    inline const char os_type[] = "Windows";
    inline const char locale_name[] = "Russian_Russia.1251";
#elif defined(LINUX)
    inline const char os_type[] = "Linux";
    inline const char locale_name[] = "ru_RU.UTF8";
#else
    inline const char os_type[] = "";
    inline const char locale_name[] = "";
#endif
// ---------------------------------------------------------------------------
//
// Разрядность
//
#if defined(PROJECT_IMAGE_X64)
    inline const char project_image_type[] = "x64";
#elif defined(PROJECT_IMAGE_X86)
    inline const char project_image_type[] = "x86";
#else
    inline const char project_image_type[] = "";
#endif
// ---------------------------------------------------------------------------
#if defined(PROJECT_BUILD_TYPE_DEBUG)
    inline const char project_build_type[] = "Debug";
#elif defined(PROJECT_BUILD_TYPE_RELEASE)
    inline const char project_build_type[] = "Release";
#else
    inline const char project_build_type[] = "";
#endif
// ---------------------------------------------------------------------------
#endif // end PROJECT_CONFIG_HPP